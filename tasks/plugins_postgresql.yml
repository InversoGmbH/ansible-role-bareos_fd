---

- name: plugins_postgresql | Enable local peer access for root user
  ansible.builtin.lineinfile:
    path: "{{ bareos_fd_plugin_psql_config_hba }}"
    line: >-
      local all root peer  # Ansible managed:
      Do NOT remove line manually! Managed by bareos_fd role
    regexp: '^local\s+all\s+root\s+peer'  # match for any amount of spaces
    state: present
    backup: true
  notify: Reload postgresql

- name: plugins_postgresql | Make sure WAL archive dir is present
  ansible.builtin.file:
    state: directory
    owner: postgres
    group: postgres
    mode: "0751"
    path: "{{ bareos_fd_plugin_psql_wal_archive }}"

- name: plugins_postgresql | Make sure postgres conf.d dir is present
  ansible.builtin.file:
    state: directory
    owner: postgres
    group: postgres
    mode: "0755"
    path: "{{ bareos_fd_plugin_psql_root_dir }}/conf.d"

- name: plugins_postgresql | Include conf.d dir in postgresql.conf
  ansible.builtin.lineinfile:
    path: "{{ bareos_fd_plugin_psql_config }}"
    line: >-
      include_dir = 'conf.d'    # Ansible managed:
      Do NOT remove line manually! Managed by bareos_fd role
    regexp: '^#?(\s+)?include_dir'  # match also commented line
    state: present
    backup: true
  notify: Reload postgresql

- name: plugins_postgresql | Deploy config for wal archive mode
  ansible.builtin.template:
    src: "templates/plugin_postgresql_bareos_wal_archive.conf.j2"
    dest: "{{ bareos_fd_plugin_psql_root_dir }}/conf.d/bareos_postgresql_wal_archive.conf"
    backup: true
    owner: root
    group: root
    mode: "0644"
  notify: Reload postgresql

- name: plugins_postgresql | Create plugin_defaults file
  ansible.builtin.template:
    src: "templates/plugin_postgresql_defaults.ini.j2"
    dest: "/etc/bareos/bareos-fd.d/plugin_postgresql_defaults.ini"
    backup: true
    owner: root
    group: root
    mode: "0644"
